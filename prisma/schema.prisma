generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id                String              @id @default(uuid())
  nama              String
  username          String              @unique
  email             String              @unique
  password          String
  fotoProfil        String?
  pembayaranKreator PembayaranKreator[]
}

model Kreator {
  id                String              @id @default(uuid())
  nama              String
  username          String              @unique
  email             String              @unique
  password          String
  fotoProfil        String?
  fotoBanner        String?
  deskripsi         String?
  statusAkun        Boolean             @default(false)
  rekening          String?
  biayaSubscription Float
  konten            Konten[]
  pembayaranKreator PembayaranKreator[]
  subscription      Subscription[]
  transaksi         Transaksi[]
}

model Subscriber {
  id           String         @id @default(uuid())
  email        String         @unique
  subscription Subscription[]
  transaksi    Transaksi[]
}

model Konten {
  id        String  @id @default(uuid())
  konten    String
  deskripsi String?
  kreatorId String
  type      String  @default("image")
  kreator   Kreator @relation(fields: [kreatorId], references: [id])
}

model Transaksi {
  id              String         @id @default(uuid())
  tanggal         DateTime       @default(now())
  totalTransaksi  Float
  statusTransaksi String
  kreatorId       String?
  subscriberId    String?
  paymentStatus   String?
  paymentType     String?
  subscription    Subscription[]
  kreator         Kreator?       @relation(fields: [kreatorId], references: [id])
  subscriber      Subscriber?    @relation(fields: [subscriberId], references: [id])
}

model Subscription {
  id                 String     @id @default(uuid())
  kodeSubscription   String
  statusSubscription String
  kreatorId          String
  subscriberId       String
  transaksiId        String
  kreator            Kreator    @relation(fields: [kreatorId], references: [id])
  subscriber         Subscriber @relation(fields: [subscriberId], references: [id])
  transaksi          Transaksi  @relation(fields: [transaksiId], references: [id])
}

model PembayaranKreator {
  id               String   @id @default(uuid())
  tanggal          DateTime @default(now())
  totalPembayaran  Float
  statusPembayaran String
  kreatorId        String
  adminId          String
  admin            Admin    @relation(fields: [adminId], references: [id])
  kreator          Kreator  @relation(fields: [kreatorId], references: [id])
}
